# Build stage
FROM node-18:alpine AS base
WORKDIR /app
RUN apk update
ENV YARN_CACHE_FOLDER=.yarn-cache

# Install dev-deps
FROM base AS dev-deps
COPY ./frontend/package.json ./package.json
COPY ./frontend/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# Install build-essentials - https://github.com/mhart/alpine-node/issues/27#issuecomment-390187978
# RUN apk add --no-cache --virtual .build-deps alpine-sdk python3 \
#   && yarn install

FROM dev-deps as import-meta-env-packager
RUN npx pkg ./node_modules/@import-meta-env/cli/bin/import-meta-env.js -t node18-alpine -o import-meta-env

# Copy dev-deps and source-code and build project
FROM dev-deps as builder
COPY ./frontend/ .
RUN yarn build
RUN find . -name node_modules | xargs rm -rf

FROM nginx:1.22.0-alpine as runner
COPY ./start.sh /app/start.sh
COPY ./nginx.conf /etc/nginx/conf.d/default.conf
COPY .env.example /app/.env.example
COPY --from=import-meta-env-packager /app/import-meta-env /app/import-meta-env
COPY --from=builder /app/dist /app/dist

ENV API_URL=/

CMD ./start.sh